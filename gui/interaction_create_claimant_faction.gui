######################################################
################ CREATE CLAIMANT FACTION #############
######################################################
window = {
	name = "create_claimant_faction_against_interaction_window"
	size = { 650 875 }
	datacontext = "[CreateClaimantFactionAgainstWindow.GetCharacterInteractionConfirmationWindow]"
	parentanchor = top|left
	widgetanchor = top|left
	position = { 700 90 }
	movable = no
	layer = windows_layer

	using = Window_Background
	using = Window_Decoration_Spike

	vbox = {
		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "create_claimant_faction_against"
			}

			blockoverride "button_close"
			{
				onclick = "[CreateClaimantFactionAgainstWindow.Close]"
			}

			icon_character_interaction = {}
		}

		vbox = {
			layoutpolicy_horizontal = expanding

			widget = {
				name = "portraits"
				layoutpolicy_horizontal = expanding
				size = { 0 170 }

				### LEFT ACTOR
				portrait_shoulders = {
					name = "left_background_portrait"
					datacontext = "[CharacterInteractionConfirmationWindow.GetActor]"
					visible = "[Character.IsValid]"
					parentanchor = left|vcenter
					position = { 20 0 }
					tooltip_enabled = "[Character.IsValid]"
				}

				portrait_head = {
					name = "left_main_portrait"
					datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"
					parentanchor = center
					position = { -80 -20 }
					tooltip_enabled = "[Character.IsValid]"

					### LEFT SECONDARY
					icon = {
						name = "left_main_portrait_glow"
						datacontext = "[CharacterInteractionConfirmationWindow.GetRecipient]"
						visible = "[Not(Character.IsValid)]"
						size = { 100% 100% }
						texture = "gfx/portraits/portrait_selected_glow.dds"
					}
				}

				button_round  = {
					parentanchor = center
					position = { -80 62 }
					name = "change_left_character"
					visible = "[CharacterInteractionConfirmationWindow.GetRecipient.IsValid]"
					tooltip = "CHANGE_CHARACTER"
					using = tooltip_below

					button_replace = {
						parentanchor = center
						onclick = "[CreateClaimantFactionAgainstWindow.ClearRecipient]"
					}
				}

				coa_title_medium_crown = {
					datacontext = "[CreateClaimantFactionAgainstWindow.GetSelectedTitle.GetTitle]"
					visible = "[CreateClaimantFactionAgainstWindow.IsTitleSelected]"
					parentanchor = center
					position = { 30 -20 }
				}

				### RIGHT RECIPIENT
				portrait_shoulders = {
					name = "right_background_portrait"
					datacontext = "[CharacterInteractionConfirmationWindow.GetSecondaryActor]"
					visible = "[Character.IsValid]"
					parentanchor = right|vcenter
					position = { -20 0 }
					tooltip_enabled = "[Character.IsValid]"

					blockoverride "portrait_transformation"
					{
						portrait_scale = { -1 1 }
						portrait_offset = { 1 0 }
					}
				}
			}
		}

		divider = {
			layoutpolicy_horizontal = expanding
		}

		vbox = {
			margin_bottom = 10

			text_single = {
				name = "select_title_label"
				visible = "[CharacterInteractionConfirmationWindow.GetRecipient.IsValid]"
				text = "FACTIONS_WINDOW_START_CLAIMANT_FACTION_PICK_TITLE"
				using = Font_Size_Medium
			}

			text_single = {
				name = "select_claimant_label"
				visible = "[Not(CharacterInteractionConfirmationWindow.GetRecipient.IsValid)]"
				text = "FACTIONS_WINDOW_START_CLAIMANT_FACTION_PICK_CLAIMANT"
				using = Font_Size_Medium
			}
		}

		### TITLE LIST
		scrollbox = {
			name = "titles_list"
			visible = "[CharacterInteractionConfirmationWindow.GetRecipient.IsValid]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_empty"
			{
				text = "CLAIMANT_TITLES_NO_TITLES"
				visible = "[Not(CreateClaimantFactionAgainstWindow.HasTitles)]"
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "titles_grid"
					datamodel = "[CreateClaimantFactionAgainstWindow.GetTitles]"
					layoutpolicy_horizontal = expanding
					spacing = 3

					item = {

						hbox = {
							layoutpolicy_horizontal = expanding

							coa_title_tiny_crown = {
								datacontext = "[ClaimTitleItem.GetTitle]"
							}

							button_standard = {
								name = "title_list_item"
								layoutpolicy_horizontal = expanding
								size = { 0 45 }
								onclick = "[ClaimTitleItem.OnClick]"
								down = "[ClaimTitleItem.IsSelected]"

								hbox = {
									margin = { 10 0 }
									spacing = 10


									text_single = {
										layoutpolicy_horizontal = expanding
										text = "[ClaimTitleItem.GetTitle.GetNameNoTooltip]"
									}
								}
							}

						}
					}
				}
			}
		}



		### LIST OF POTENTIAL CLAIMANTS


		scrollbox = {
			name = "claimants_scroll_area"
			datacontext = "[CreateClaimantFactionAgainstWindow.GetCharacterSelectionList]"
			visible = "[Not(CharacterInteractionConfirmationWindow.GetRecipient.IsValid)]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_empty"
			{
				text = "NO_POTENTIAL_CLAIMANTS"
				visible = "[Not(CharacterSelectionList.HasItems)]"
			}

			blockoverride "scrollbox_content"
			{
				vbox = {
					name = "potential_claimants_grid"
					datamodel = "[CharacterSelectionList.GetList]"
					layoutpolicy_horizontal = expanding
					spacing = 3

					item = {
						button_standard = {
							datacontext = "[CharacterListItem.GetCharacter]"
							layoutpolicy_horizontal = expanding
							size = { 0 130 }
							onclick = "[CharacterListItem.OnClick('character')]"

							hbox = {
								portrait_head = {}

								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 5

									hbox = {
										layoutpolicy_horizontal = expanding
										text_single = {
											layoutpolicy_horizontal = growing
											text = "[Character.GetNameNoTooltip]"
											default_format = "#high"
											using = Font_Size_Medium
										}

										text_single = {
											name = "character_relation"
											layoutpolicy_horizontal = expanding
											text = "  |  [Character.GetRelationToString( GetPlayer )]"
											default_format = "#low"
											visible = "[Not(StringIsEmpty(Character.GetRelationToString( GetPlayer )))]"
										}
									}

									text_single = {
										layoutpolicy_horizontal = expanding
										text = "FACTION_WINDOW_OPINION_OF_TARGET"
									}

									hbox = {
										layoutpolicy_horizontal = expanding

										hbox = {
											name = "titles_grid"
											datamodel = "[CharacterListItem.GetTitleItems]"

											item = {
												coa_title_tiny_crown = {
													datacontext = "[Claim.GetTitle]"
												}
											}

											expand = {}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		hbox = {
			margin = { 0 15 }

			### SEND OFFER BUTTON
			button_primary = {
				name = "send_offer_button"
				size = { 400 42 }
				onclick = "[CreateClaimantFactionAgainstWindow.Send]"
				enabled = "[CreateClaimantFactionAgainstWindow.CanSendOffer]"

				text = "[CharacterInteractionConfirmationWindow.GetSendName]"
				default_format = "#high"
				using = Font_Size_Medium

				tooltip = "[CreateClaimantFactionAgainstWindow.GetSendOfferTooltip]"
			}
		}
	}
}
