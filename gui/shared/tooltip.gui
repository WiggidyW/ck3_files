template DefaultTooltipText
{
	#using = FontNormal
	default_format = "#medium"
	align = left
	autoresize = yes
	alwaystransparent = yes
	multiline = yes

	max_width = 450
}

template GeneralTooltipSetup
{
	filter_mouse = all
	button = {
		name = "close_tooltips"
		size = { 0 0 } # Intentional zero size
		onclick = "[CloseAllTooltips]"
		shortcut = "close_tooltips"
	}
}

template DefaultTooltipBackground
{
	background = {
		name = "bg"
		block "bg_texture" {
			texture = "gfx/interface/tooltips/tooltip_bg.dds"
		}

		spriteType = Corneredtiled
		spriteborder = { 3 5 }

		block "bg_color" {
			tintcolor = "[TooltipInfo.GetTintColor]"
		}

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/tiles/tile_overlay_effect_01.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
		}
	}

	background = {
		name = "frame"
		texture = "gfx/interface/tooltips/tooltip_frame.dds"
		spriteType = Corneredtiled
		spriteborder = { 20 20 }
	
		block "frame_color" {
			tintcolor = "[TooltipInfo.GetTintColor]"
		}

		modify_texture = {
			name = "overlay"
			texture = "gfx/interface/tiles/tile_overlay_effect_01.dds"
			spriteType = Corneredstretched
			spriteborder = { 0 0 }
			blend_mode = overlay
		}
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 3 3 }

		icon = {
			name = "tooltip_frame_locked" # Name referenced from code to toggle visibility
			texture = "gfx/interface/tooltips/tooltip_frame.dds"
			spriteType = Corneredtiled
			spriteborder = { 20 20 }
			tintcolor = "[TooltipInfo.GetTintColor]"
			size = { 100% 100% }

			modify_texture = {
				name = "overlay"
				texture = "gfx/interface/tiles/tile_overlay_effect_01.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = overlay
			}
		}

		block "progress"
		{
			progressbar = { # This is a clone of progressbar_standard but types cannot be used here due to load order issues
				name = "tooltip_lock_progress_bar" # Name referenced from code to fill value
				visible = "[UsesTimerLocking]"
				parentanchor = bottom
				size = { 100% 100% }
				min = 0
				max = 100
				tintcolor = "[TooltipInfo.GetTintColor]"
				direction = vertical
				
				progresstexture = "gfx/interface/tiles/alpha_edge_fade_1px.dds"
				noprogresstexture = "gfx/interface/tiles/stretch_bottom_fade.dds"

				spriteType = Corneredstretched
				spriteborder = { 6 6 }
				alpha = 0.35

				icon = {
					name = "overlay"
					texture = "gfx/interface/tiles/tile_progress_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 2 2 }
					size = { 100% 100% }
				}
			}
		}
	}
}

template CardTooltipBackground
{
	background = {
		name = "bg"
		texture = "gfx/interface/tooltips/tooltip_card_bg.dds"
		spriteType = Corneredtiled
		tintcolor = "[TooltipInfo.GetTintColor]"
	}
}

container = {
	name = "ProvinceTooltipWidget"
	filter_mouse = all
	alwaystransparent = yes

	flowcontainer = {
		position = { 25 25 }
		direction = vertical

		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = yes

			blockoverride "bg_color" {
				tintcolor = { 1.0 1 1.0 0.8 }
			}
			blockoverride "progress" {}
		}

		textbox = {
			using = DefaultTooltipText
			name = "TooltipText"
			margin = { 20 10 }
		}
	}
}

template DefaultTooltipWidget {
	container = {
		using = GeneralTooltipSetup
		alwaystransparent = no

		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = no
		}

		flowcontainer = {
			direction = vertical

			textbox = {
				name = "TooltipText"
				using = DefaultTooltipText
				margin = { 20 20 }
				margin_top = 10

				fonttintcolor = "[TooltipInfo.GetTintColor]"
				alwaystransparent = no
			}

			textbox = {
				name = "TooltipTextShortcut"
				using = DefaultTooltipText
				parentanchor = right
				margin_top = -20
				margin_bottom = 15
				margin_right = 15
			}
		}
	}
}

template TooltipWithFakeShortcut {
	container = {
		using = GeneralTooltipSetup
		alwaystransparent = no

		widget = {
			name = "background"
			using = DefaultTooltipBackground
			size = { 100% 100% }
			alwaystransparent = no
		}

		flowcontainer = {
			direction = vertical

			textbox = {
				name = "TooltipText"
				using = DefaultTooltipText
				margin = { 20 20 }
				margin_top = 10

				fonttintcolor = "[TooltipInfo.GetTintColor]"
				alwaystransparent = no
			}

			textbox = {
				name = "TooltipTextFakeShortcut"
				using = DefaultTooltipText
				block "shortcut_text" {}
				parentanchor = right
				margin_top = -20
				margin_bottom = 15
				margin_right = 15
			}
		}
	}
}

container = {
	alwaystransparent = no
	name = "DefaultTooltipWidget"
	using = DefaultTooltipWidget
}
