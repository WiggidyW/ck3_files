######################################################
################# SELECT COMMANDER ###################
######################################################

window = {
	name = "select_commander_window"
	layer = middle
	movable = no

	using = Window_Position_CharacterList_Small
	using = Window_Size_CharacterList_Small
	minimumsize = { 620 100 }
	using = Window_Background
	using = Window_Decoration

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
	}

	vbox = {
		layoutpolicy_horizontal = expanding
		spacing = 4

		using = Window_Margins

		header_pattern = {
			layoutpolicy_horizontal = expanding

			blockoverride "header_text"
			{
				text = "SELECT_COMMANDER_HEADER"
			}

			blockoverride "button_close"
			{
				onclick = "[CSelectCommanderWindow.Close]"
			}
		}
		text_single = {
			layoutpolicy_horizontal = growing
			text = "[CSelectCommanderWindow.GetArmy.GetName]"
			using = Font_Size_Medium						
			align = center
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			### List of Commanders
			scrollbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				blockoverride "scrollbox_content"
				{
					vbox = {
						name = "commanders_grid"
						datacontext = "[CSelectCommanderWindow.GetArmy]"
						datacontext = "[CSelectCommanderWindow.GetListItems]"
						datamodel = "[CharacterSelectionList.GetList]"
						layoutpolicy_horizontal = expanding
						spacing = 6

						item = {
							widget_character_list_item = {
								layoutpolicy_horizontal = expanding

								datacontext = "[CharacterListItem.GetCharacter]"
								datacontext = "[CSelectCommanderWindow.GetArmy]"
								tooltip = "[CharacterListItem.GetText('tooltip')]"


								blockoverride "portrait_button"
								{
									grayscale = "[Not(CharacterListItem.IsSelectable)]"
								}

								blockoverride "widget"
								{
									background = {
										visible = "[Not(CharacterListItem.IsSelectable)]"
										using = Background_Area
										margin_bottom = -4
									}
								}

								blockoverride "button_content"
								{
									vbox = {
										using = Background_Guest
										margin = { 10 5 }


										hbox = {
											layoutpolicy_horizontal = expanding
											spacing = 5

											icon = {
												name = "commander_is_leader"
												visible = "[Character.IsLocalPlayer]"
												size = {30 30}
												texture = "gfx/interface/icons/commander_is_leader.dds"
												tooltip = "POTENTIAL_COMMANDER_IS_LEADER_TOOLTIP"
											}

											text_single = {
												text = "[Character.GetUINameNoTooltip]"

												using = Font_Size_Medium
												fontsize_min = 14
												max_width = 400
											}
											expand = {}
										}

										hbox = {
											layoutpolicy_horizontal = expanding

											text_single = {
												name = "character_relation"
												text = "[Character.GetRelationToString( GetPlayer )]"
												default_format = "#low"
												fontsize_min = 14
											}

											expand = {}
										}

										hbox = {
											name = "skill_and_traits"
											layoutpolicy_horizontal = expanding
											margin_right = 15
											spacing = 5

											hbox = {
												tooltip = "[Character.GetCommanderLeadingOwnAdvantageDesc( GetPlayer )]"

												icon = {
													name = "skill_icon"
													texture = "gfx/interface/icons/icon_commander_advantage.dds"
													size = { 40 40 }

													background = {
														name = "skill_icon_bg"
														texture = "gfx/interface/character_view/character_view_skills_bg.dds"
														framesize = { 70 26 }
														frame = "[CharacterListItem.GetMartialSkill.GetFrame]"
													}
												}

												text_single= {
													name = "skill_value"
													text = "[CharacterListItem.GetInt('')]"
													default_format = "#high"
													using = Font_Size_Big
												}
											}

											hbox = {
												name = "traits_grid"
												datamodel = "[CharacterListItem.GetTraits]"

												item = {
													icon_trait = {
														blockoverride "icon_size" {
															size = { 40 40 }
														}
													}
												}
											}

											expand = {}

											hbox = {
												visible = "[Character.IsKnightInArmy]"
												spacing = 5

												background = {
													visible = "[Character.IsKnightInSpecificArmy( Army.Self )]"
													using = Background_Area
													margin = { 10 0 }
													margin_bottom = 3
												}

												hbox = {
													tooltip = "[Character.GetProwessBreakdown]"

													icon = {
														name = "prowess_icon"
														size = { 35 35 }
														texture = "gfx/interface/icons/icon_prowess.dds"
													}

													text_single = {
														name = "prowess_value"
														text = "[Character.GetProwess|0]"
														default_format = "#high"
													}
												}

												text_single = {
													name = "knight_in_this_army"
													visible = "[Character.IsKnightInSpecificArmy( Army.Self )]"
													text = "KNIGHT_IN_THIS_ARMY_TOOLTIP"
													fontsize_min = 14
													max_width = 200
												}

												text_single = {
													name = "knight_in_an_army"
													visible = "[Not( Character.IsKnightInSpecificArmy( Army.Self ) )]"
													text = "KNIGHT_IN_ARMY_TOOLTIP"
													fontsize_min = 14
													max_width = 200
												}
											}

											button_standard = {
												visible = "[Character.IsPlayerInteractionShown('recruit_guest_interaction')]"
												enabled = "[Character.IsPlayerInteractionValid('recruit_guest_interaction')]"
												onclick = "[Character.OpenPlayerInteraction('recruit_guest_interaction')]"
												tooltip = "[Character.GetPlayerInteractionTooltip('recruit_guest_interaction')]"
												text = "[Character.GetPlayerInteractionName('recruit_guest_interaction')]"
											}
										}
									}
								}
							}
						}

						expand = {}
					}
				}
			}

			hbox = {
				margin = { 0 15 }

				button_standard = {
					size = { 300 50 }

					enabled = "[CSelectCommanderWindow.CanDetachCommander]"
					onclick = "[CSelectCommanderWindow.DetachCommander]"

					text = "DETACH_COMMANDER"
					default_format = "#high"
					using = tooltip_es
				}
			}
		}
	}
}
