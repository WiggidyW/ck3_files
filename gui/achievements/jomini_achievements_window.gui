jomini_achievement_window = {}
# types Achievements
# {
# 	type achievement_filter_button = checkbutton {
# 		texture = "gfx/editor_gui/editor_checkbox.dds"
# 		size = { 200 26 }
# 		framesize = { 16 16 }
# 		block "filter_button"
# 		{}
# 	}
# }
# window = {
# 	using = editor_window
# 	name = "achievements_window"
# 	position = { 300 100 }
# 	size = { 535 400 }
# 	minimumsize = { 450 100 }
# 	resizable = yes

# 	editor_textbox = {
# 		position = { 10 3 }
# 		size = { 210 22 }
# 		text = "ACHIEVEMENTS"
# 	}

# 	editor_button = {
# 		name = "close"
# 		position = { -5 5 }
# 		size = { 20 20 }
# 		fontcolor = { 1 1 1 1 }
# 		parentanchor = top|right
# 		text = "x"
# 		align = center|nobaseline
# 		onclick = "[AchievementWindow.Hide]"
# 	}

# 	vbox = {
# 		alwaystransparent = yes
# 		layoutpolicy_horizontal = expanding
# 		layoutpolicy_vertical = expanding
# 		widget = {
# 			size = { 0 32 }
# 			layoutpolicy_horizontal = Fixed
# 		}
# 		vbox = {
# 			layoutpolicy_horizontal = expanding
# 			hbox = {
# 				visible = "[AchievementsManager.HasGameStarted]"
# 				layoutpolicy_horizontal = expanding
# 				achievement_spacer_horizontal = {}
# 				achievement_filter_button = {
# 					blockoverride "filter_button" {
# 						checked = "[AchievementWindow.ShouldShowPossible]"
# 						onclick = "[AchievementWindow.ToggleFilterPossible]"
# 						text = "ACHIEVEMENT_FILTER_POSSIBLE"
# 					}
# 				}
# 				achievement_spacer_horizontal = {}
# 				achievement_filter_button = {
# 					blockoverride "filter_button" {
# 						text = "ACHIEVEMENT_FILTER_NOT_POSSIBLE"
# 						checked = "[AchievementWindow.ShouldShowNotPossible]"
# 						onclick = "[AchievementWindow.ToggleFilterNotPossible]"
# 					}
# 				}
# 				achievement_spacer_horizontal = {}
# 				widget = {
# 					layoutpolicy_horizontal = expanding
# 				}
# 			}
# 			hbox = {
# 				layoutpolicy_horizontal = expanding
# 				achievement_spacer_horizontal = {}
# 				achievement_filter_button = {
# 					blockoverride "filter_button" {
# 						text = "ACHIEVEMENT_FILTER_LOCKED"
# 						checked = "[AchievementWindow.ShouldShowLocked]"
# 						onclick = "[AchievementWindow.ToggleFilterLocked]"
# 					}
# 				}
# 				achievement_spacer_horizontal = {}
# 				achievement_filter_button = {
# 					blockoverride "filter_button" {
# 						text = "ACHIEVEMENT_FILTER_UNLOCKED"
# 						checked = "[AchievementWindow.ShouldShowUnlocked]"
# 						onclick = "[AchievementWindow.ToggleFilterUnlocked]"
# 					}
# 				}
# 				widget = {
# 					layoutpolicy_horizontal = expanding
# 				}
# 			}
# 		}
# 		achievement_spacer_vertical = {}

# 		hbox = {
# 			layoutpolicy_horizontal = expanding
# 			layoutpolicy_vertical = expanding
# 			alwaystransparent = yes

# 			widget = {
# 				size = { 10 0 }
# 				layoutpolicy_horizontal = Fixed
# 			}

# 			scrollarea = {
# 				alwaystransparent = yes
# 				layoutpolicy_horizontal = expanding
# 				layoutpolicy_vertical = expanding
# 				focuspolicy = all
# 				scrollbaralign_vertical = right
# 				autoresizeviewport = yes
# 				autoresizescrollarea = no

# 				background = {
# 					margin = { 2 2 }
# 					margin_bottom = 6
# 					margin_right = 6
# 					texture = "gfx/editor_gui/editor_dropdown_list.dds"
# 					spriteType = CorneredStretched
# 					spriteborder = { 6 6 }
# 					spriteborder_right = 8
# 					spriteborder_bottom = 8
# 					shaderfile = "gfx/FX/pdxgui_default.shader"
# 					layoutpolicy_horizontal = expanding
# 					layoutpolicy_vertical = expanding
# 				}

# 				viewportwidget = {
# 					widget = {
# 						scissor = no
# 					}
# 				}

# 				scrollwidget = {
# 					dynamicgridbox = {
# 						flipdirection = no
# 						alwaystransparent = no
# 						parentanchor = top|left
# 						datamodel = "[AchievementWindow.AccessGroups]"
# 						setitemsizefromcell = no
# 						# maxhorizontalslots = 1
# 						item = {
# 							flowcontainer = {
# 								layoutpolicy_horizontal = expanding
# 								layoutpolicy_vertical = fixed
# 								direction = vertical
# 								ignoreinvisible = yes
# 								achievement_spacer_vertical = {}
# 								flowcontainer = {
# 									ignoreinvisible = yes
# 									checkbutton = {
# 										texture = "gfx/editor_gui/editor_tree_expand.dds"
# 										size = { 16 16 }
# 										onclick = "[Group.ToggleCollapsed]"
# 										framesize = { 16 16 }
# 										checked = "[Not(Group.IsCollapsed)]"
# 									}
# 									button = {
# 										font = StandardGameFont
# 										fontcolor = { 0.5 0.5 0.5 1 }
# 										fontsize = 14
# 										text = "ACHIEVEMENT_GROUP_TITLE"
# 										onclick = "[Group.ToggleCollapsed]"
# 										# autoresize = yes
# 										elide = right
# 										align = top|left
# 										size = { 480 14 }
# 										margin_left = 5
# 										tooltip = "ACHIEVEMENT_GROUP_TOOLTIP"
# 									}
# 								}
# 								achievement_spacer_vertical = {}
# 								dynamicgridbox = {
# 									flipdirection = no
# 									alwaystransparent = no
# 									datamodel = "[Group.AccessVisibleAchievements]"
# 									visible = "[Not(Group.IsCollapsed)]"
# 									item = {
# 										button = {
# 											size = { 500 76 }
# 											maximumsize = { 300 76 }
# 											# onclick = "[ChatNotificationMessage.StartChat]"
# 											visible = yes
# 											block "achievement_unlock_popup"
# 											{}
# 											hbox = {
# 												layoutpolicy_horizontal = expanding
# 												layoutpolicy_vertical = expanding
# 												background = {
# 													# texture = "gfx/achievement/achievement_popup_background.dds"
# 													texture = "gfx/social/social_notification_background.dds"
# 													spriteType = CorneredStretched
# 													spriteborder = { 6 6 }
# 													shaderfile = "gfx/FX/pdxgui_default.shader"
# 													block "popup_background"
# 													{}
# 												}
# 												achievement_spacer_horizontal = {}
# 												icon = {
# 													texture = "[GUIAchievement.AccessTexture]"
# 													size = { 64 64 }
# 													alpha = "[Select_float(GUIAchievement.GetAchievement.IsUnlocked,'(float)1.0','(float)0.5')]"
# 													tooltip = "ACHIEVEMENT_UNLOCKED"
# 													icon = {
# 														texture = "gfx/achievements/padlock.dds"
# 														size = { 64 64 }
# 														visible = "[Not(GUIAchievement.GetAchievement.IsUnlocked)]"
# 														tooltip = "ACHIEVEMENT_LOCKED"
# 													}
# 													textbox = {
# 														parentanchor = top|right
# 														widgetanchor = top|right
# 														text = "*"
# 														tooltip = "ACHIEVEMENT_NOT_POSSIBLE"
# 														autoresize = yes
# 														visible = "[Not(GUIAchievement.IsPossible)]"
# 													}
# 												}
# 												achievement_spacer_horizontal = {}
# 												vbox = {
# 													achievement_spacer_vertical = {}
# 													layoutpolicy_horizontal = expanding
# 													layoutpolicy_vertical = expanding
# 													textbox = {
# 														font = StandardGameFont
# 														fontcolor = { 1 1 1 1 }
# 														fontsize = 16
# 														text = "[GUIAchievement.GetName]"
# 														autoresize = no
# 														layoutpolicy_horizontal = expanding
# 														minimumsize = { -1 16 }
# 														align = vcenter|left
# 														alpha = "[Select_float(GUIAchievement.GetAchievement.IsUnlocked,'(float)1.0','(float)0.5')]"
# 														tooltip = "[GUIAchievement.GetHappenedDescription]"
# 														block "achievement_name"
# 														{}
# 													}
# 													achievement_spacer_vertical = {}
# 													textbox = {
# 														font = StandardGameFont
# 														fontcolor = { 0.8 0.8 0.8 1 }
# 														fontsize = 12
# 														text = "[GUIAchievement.GetDescription]"
# 														autoresize = no
# 														layoutpolicy_horizontal = expanding
# 														layoutpolicy_vertical = expanding
# 														elide = right
# 														multiline = yes
# 														align = top|left
# 														margin_right = 5
# 														alpha = "[Select_float(GUIAchievement.GetAchievement.IsUnlocked,'(float)1.0','(float)0.5')]"
# 														tooltip = "[GUIAchievement.GetHappenedDescription]"
# 														block "achievement_description"
# 														{}
# 													}
# 													achievement_spacer_vertical = {}
# 												}
# 											}
# 										}
# 									}
# 								}
# 							}
# 						}
# 					}
# 				}

# 				scrollbar_vertical = {
# 					using = SocialVerticalScrollbar
# 				}

# 				scrollbar_horizontal = {
# 					using = SocialHorizontalScrollbar
# 				}
# 			}
# 			widget = {
# 				size = { 10 0 }
# 				layoutpolicy_horizontal = Fixed
# 			}
# 		}

# 		widget = {
# 			size = { 0 10 }
# 			layoutpolicy_vertical = fixed
# 		}
# 	}
# }