######################################################
############# INTERACTION CONFIRMATION ###############
######################################################

window = {
	name = "character_interaction_confirmation_window"
	parentanchor = center

	using = Window_Size_MainTab

	using = Window_Background
	using = Window_Decoration
	layer = middle
	allow_outside = yes

	state = {
		name = _show
		on_start = "[GetVariableSystem.Clear( 'character_interaction_change_title' )]"
	}

	vbox = {
		set_parent_size_to_minimum = yes
		using = Window_Margins

		header_standard = {
			layoutpolicy_horizontal = expanding
			minimumsize = { 645 0 }


			background = {
				name = "header"
				texture = "gfx/interface/tiles/tile_title_big_top_01.dds"
				spriteType = Corneredtiled

				modify_texture = {
					name = "mask"
					texture = "gfx/interface/tiles/tile_title_big_top_01_mask.dds"
					spriteType = Corneredtiled
					spriteborder = { 160 0 }
					blend_mode = alphamultiply
					alpha = 0.5
				}

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/tiles/tile_title_big_top_01_overlay.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
				}
			}


			blockoverride "header_text" {
				text = "[CharacterInteractionConfirmationWindow.GetSendName]"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterInteractionConfirmationWindow.Close]"
			}

			icon_character_interaction = {
				size = { 50 50 }
				position = { 0 0 }
			}

		}

		# Title Picker
		vbox = {
			visible = "[CharacterInteractionConfirmationWindow.UsesTitleTarget]"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			margin = { 40 5 }
			spacing = 10

			hbox = {
				visible = "[CharacterInteractionConfirmationWindow.HasSelectedTitle]"
				spacing = 5

				coa_title_medium_crown = {
					datacontext = "[CharacterInteractionConfirmationWindow.GetSelectedTitle]"
					name = "selected_title_flag"
				}

				button_round  = {
					name = "change"
					datacontext = "[GetVariableSystem]"
					tooltip = "CHARACTER_INTERACTION_WINDOW_SELECT_TITLE_TOOLTIP"
					using = tooltip_below
					visible = "[CharacterInteractionConfirmationWindow.CanChangeTitle]"

					button_replace = {
						parentanchor = center
						onclick = "[VariableSystem.Toggle( 'character_interaction_change_title' )]"
					}
				}

				text_single = {
					datacontext = "[CharacterInteractionConfirmationWindow.GetSelectedTitle]"
					text = "[Title.GetNameNoTooltip]"
					using = Font_Size_Medium
					align = nobaseline
				}
			}

			hbox = {
				visible = "[Not( CharacterInteractionConfirmationWindow.HasSelectedTitle )]"

				margin = { 10 10 }

				text_single = {
					text = "CHARACTER_INTERACTION_NO_TARGET_SELECTED"
					using = Font_Size_Medium
					align = nobaseline
				}
			}

			scrollbox = {
				visible = "[GetVariableSystem.Exists('character_interaction_change_title')]"
				layoutpolicy_horizontal = expanding
				size = { 0 400 }

				blockoverride "scrollbox_content"
				{
					vbox_list_interaction_title_selection = {
						layoutpolicy_horizontal = expanding

						blockoverride "button_toggles" {}
					}
				}
			}
		}

		vbox_character_interaction_three_characters = {
			visible = "[And(Not(GetVariableSystem.Exists('character_interaction_change_title')), CharacterInteractionConfirmationWindow.ShowThreeCharacters)]"
			layoutpolicy_horizontal = expanding
		}

		widget_character_interaction_four_characters = {
			visible = "[CharacterInteractionConfirmationWindow.ShowFourCharacters]"
			layoutpolicy_horizontal = expanding
		}

		vbox_interaction_character_list = {
			datacontext = "[CharacterInteractionConfirmationWindow.GetCharacterList]"
			layoutpolicy_horizontal = expanding
			minimumsize = { 0 550 }
			blockoverride "item_size"
			{
				size = { 600 110 }
				layoutpolicy_horizontal = expanding

			}
		}

		## Effects on Characters
		vbox_character_interaction_effects = {
			visible = "[And(And(Not(GetVariableSystem.Exists('character_interaction_change_title')), CharacterInteractionConfirmationWindow.HasPickedCharacters), InteractionEffectsDescription.HasAnyAcceptEffect)]"
			datacontext = "[CharacterInteractionConfirmationWindow.GetEffectsDescription]"
			layoutpolicy_horizontal = expanding
		}

		expand = {}

		## Scheme Information
		vbox_scheme_info = {
			datacontext = "[CharacterInteractionConfirmationWindow.GetSchemeInfo]"
			visible = "[CharacterInteractionConfirmationWindow.ShouldShowScheme]"
			layoutpolicy_horizontal = expanding
		}

		## Options
		vbox_interaction_options = {
			visible = "[CharacterInteractionConfirmationWindow.HasOptions]"
		}

		### Acceptance
		hbox_character_interaction_acceptance = {
			visible = "[CharacterInteractionConfirmationWindow.ShouldShowAnswer]"
			layoutpolicy_horizontal = expanding
		}

		text_multi_on_decline_summary = {}

		hbox = {
			visible = "[CharacterInteractionConfirmationWindow.HasCost]"
			tooltip = "[CharacterInteractionConfirmationWindow.GetCostTooltip]"
			text_single = {
				text = "INTERACTION_COST"
			}
			text_single = {
				text = "[CharacterInteractionConfirmationWindow.GetCostDescription]"
			}
		}

		## Send Button
		hbox = {
			name = "button"
			margin = { 0 10 }
			margin_bottom = 15
			spacing = 3

			button_primary_big = {
				text = "[CharacterInteractionConfirmationWindow.GetSendName]"

				onclick = "[CharacterInteractionConfirmationWindow.Send]"
				enabled = "[CharacterInteractionConfirmationWindow.CanSend]"
				tooltip = "[CharacterInteractionConfirmationWindow.GetCanSendDescription]"

				clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_confirm"
			}

			button_standard = {
				visible = "[InDebugMode]"
				size = { 42 42 }
				text = "#D R#!"
				tooltip = "[CharacterInteractionConfirmationWindow.GetDebugInfo]"
			}
		}
	}

	window_character_filter = {
		datacontext = "[CharacterInteractionConfirmationWindow.GetCharacterList]"
		blockoverride "addition_filter" {
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('ruler_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('religion_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('culture_filter')]"
			}
			filter_item = {
				layoutpolicy_horizontal = expanding
				datacontext = "[CharacterSelectionList.GetFilter('dynasty_filter')]"
			}
		}
	}
}
